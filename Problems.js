const data = {
  problemsetQuestionList: {
    total: 3108,
    questions: [
      {
        acRate: 52.30656925015489,
        difficulty: "Easy",
        freqBar: null,
        frontendQuestionId: "1",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Two Sum",
        titleSlug: "two-sum",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Hash Table",
            id: "VG9waWNUYWdOb2RlOjY=",
            slug: "hash-table",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 42.651342298169816,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "2",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Add Two Numbers",
        titleSlug: "add-two-numbers",
        topicTags: [
          {
            name: "Linked List",
            id: "VG9waWNUYWdOb2RlOjc=",
            slug: "linked-list",
          },
          {
            name: "Math",
            id: "VG9waWNUYWdOb2RlOjg=",
            slug: "math",
          },
          {
            name: "Recursion",
            id: "VG9waWNUYWdOb2RlOjMx",
            slug: "recursion",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 34.694079549780945,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "3",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Longest Substring Without Repeating Characters",
        titleSlug: "longest-substring-without-repeating-characters",
        topicTags: [
          {
            name: "Hash Table",
            id: "VG9waWNUYWdOb2RlOjY=",
            slug: "hash-table",
          },
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
          {
            name: "Sliding Window",
            id: "VG9waWNUYWdOb2RlOjU1ODIx",
            slug: "sliding-window",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 39.78497960287388,
        difficulty: "Hard",
        freqBar: null,
        frontendQuestionId: "4",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Median of Two Sorted Arrays",
        titleSlug: "median-of-two-sorted-arrays",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Binary Search",
            id: "VG9waWNUYWdOb2RlOjEx",
            slug: "binary-search",
          },
          {
            name: "Divide and Conquer",
            id: "VG9waWNUYWdOb2RlOjEy",
            slug: "divide-and-conquer",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 33.7710712530563,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "5",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Longest Palindromic Substring",
        titleSlug: "longest-palindromic-substring",
        topicTags: [
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
          {
            name: "Dynamic Programming",
            id: "VG9waWNUYWdOb2RlOjEz",
            slug: "dynamic-programming",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 47.74451336841819,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "6",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Zigzag Conversion",
        titleSlug: "zigzag-conversion",
        topicTags: [
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 28.514932888795823,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "7",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Reverse Integer",
        titleSlug: "reverse-integer",
        topicTags: [
          {
            name: "Math",
            id: "VG9waWNUYWdOb2RlOjg=",
            slug: "math",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 17.182953505385814,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "8",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "String to Integer (atoi)",
        titleSlug: "string-to-integer-atoi",
        topicTags: [
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 56.12766273765296,
        difficulty: "Easy",
        freqBar: null,
        frontendQuestionId: "9",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Palindrome Number",
        titleSlug: "palindrome-number",
        topicTags: [
          {
            name: "Math",
            id: "VG9waWNUYWdOb2RlOjg=",
            slug: "math",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 28.139041190127358,
        difficulty: "Hard",
        freqBar: null,
        frontendQuestionId: "10",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Regular Expression Matching",
        titleSlug: "regular-expression-matching",
        topicTags: [
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
          {
            name: "Dynamic Programming",
            id: "VG9waWNUYWdOb2RlOjEz",
            slug: "dynamic-programming",
          },
          {
            name: "Recursion",
            id: "VG9waWNUYWdOb2RlOjMx",
            slug: "recursion",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 55.128941351521966,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "11",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Container With Most Water",
        titleSlug: "container-with-most-water",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Two Pointers",
            id: "VG9waWNUYWdOb2RlOjk=",
            slug: "two-pointers",
          },
          {
            name: "Greedy",
            id: "VG9waWNUYWdOb2RlOjE3",
            slug: "greedy",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 64.58661704463957,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "12",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Integer to Roman",
        titleSlug: "integer-to-roman",
        topicTags: [
          {
            name: "Hash Table",
            id: "VG9waWNUYWdOb2RlOjY=",
            slug: "hash-table",
          },
          {
            name: "Math",
            id: "VG9waWNUYWdOb2RlOjg=",
            slug: "math",
          },
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 61.0415829360754,
        difficulty: "Easy",
        freqBar: null,
        frontendQuestionId: "13",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Roman to Integer",
        titleSlug: "roman-to-integer",
        topicTags: [
          {
            name: "Hash Table",
            id: "VG9waWNUYWdOb2RlOjY=",
            slug: "hash-table",
          },
          {
            name: "Math",
            id: "VG9waWNUYWdOb2RlOjg=",
            slug: "math",
          },
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 42.66622053346145,
        difficulty: "Easy",
        freqBar: null,
        frontendQuestionId: "14",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Longest Common Prefix",
        titleSlug: "longest-common-prefix",
        topicTags: [
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
          {
            name: "Trie",
            id: "VG9waWNUYWdOb2RlOjI3",
            slug: "trie",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 34.400740128022086,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "15",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "3Sum",
        titleSlug: "3sum",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Two Pointers",
            id: "VG9waWNUYWdOb2RlOjk=",
            slug: "two-pointers",
          },
          {
            name: "Sorting",
            id: "VG9waWNUYWdOb2RlOjYxMDQ5",
            slug: "sorting",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 45.79275417293159,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "16",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "3Sum Closest",
        titleSlug: "3sum-closest",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Two Pointers",
            id: "VG9waWNUYWdOb2RlOjk=",
            slug: "two-pointers",
          },
          {
            name: "Sorting",
            id: "VG9waWNUYWdOb2RlOjYxMDQ5",
            slug: "sorting",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 60.25838132557391,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "17",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Letter Combinations of a Phone Number",
        titleSlug: "letter-combinations-of-a-phone-number",
        topicTags: [
          {
            name: "Hash Table",
            id: "VG9waWNUYWdOb2RlOjY=",
            slug: "hash-table",
          },
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
          {
            name: "Backtracking",
            id: "VG9waWNUYWdOb2RlOjE0",
            slug: "backtracking",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 36.22313192163888,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "18",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "4Sum",
        titleSlug: "4sum",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Two Pointers",
            id: "VG9waWNUYWdOb2RlOjk=",
            slug: "two-pointers",
          },
          {
            name: "Sorting",
            id: "VG9waWNUYWdOb2RlOjYxMDQ5",
            slug: "sorting",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 45.138783233806244,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "19",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Remove Nth Node From End of List",
        titleSlug: "remove-nth-node-from-end-of-list",
        topicTags: [
          {
            name: "Linked List",
            id: "VG9waWNUYWdOb2RlOjc=",
            slug: "linked-list",
          },
          {
            name: "Two Pointers",
            id: "VG9waWNUYWdOb2RlOjk=",
            slug: "two-pointers",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 40.5390537207578,
        difficulty: "Easy",
        freqBar: null,
        frontendQuestionId: "20",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Valid Parentheses",
        titleSlug: "valid-parentheses",
        topicTags: [
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
          {
            name: "Stack",
            id: "VG9waWNUYWdOb2RlOjE1",
            slug: "stack",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 64.1755210880919,
        difficulty: "Easy",
        freqBar: null,
        frontendQuestionId: "21",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Merge Two Sorted Lists",
        titleSlug: "merge-two-sorted-lists",
        topicTags: [
          {
            name: "Linked List",
            id: "VG9waWNUYWdOb2RlOjc=",
            slug: "linked-list",
          },
          {
            name: "Recursion",
            id: "VG9waWNUYWdOb2RlOjMx",
            slug: "recursion",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 74.43421791766744,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "22",
        isFavor: false,
        paidOnly: false,
        status: "ac",
        title: "Generate Parentheses",
        titleSlug: "generate-parentheses",
        topicTags: [
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
          {
            name: "Dynamic Programming",
            id: "VG9waWNUYWdOb2RlOjEz",
            slug: "dynamic-programming",
          },
          {
            name: "Backtracking",
            id: "VG9waWNUYWdOb2RlOjE0",
            slug: "backtracking",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 52.58073714114471,
        difficulty: "Hard",
        freqBar: null,
        frontendQuestionId: "23",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Merge k Sorted Lists",
        titleSlug: "merge-k-sorted-lists",
        topicTags: [
          {
            name: "Linked List",
            id: "VG9waWNUYWdOb2RlOjc=",
            slug: "linked-list",
          },
          {
            name: "Divide and Conquer",
            id: "VG9waWNUYWdOb2RlOjEy",
            slug: "divide-and-conquer",
          },
          {
            name: "Heap (Priority Queue)",
            id: "VG9waWNUYWdOb2RlOjYxMDUw",
            slug: "heap-priority-queue",
          },
          {
            name: "Merge Sort",
            id: "VG9waWNUYWdOb2RlOjYxMDUx",
            slug: "merge-sort",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 64.23976087825956,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "24",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Swap Nodes in Pairs",
        titleSlug: "swap-nodes-in-pairs",
        topicTags: [
          {
            name: "Linked List",
            id: "VG9waWNUYWdOb2RlOjc=",
            slug: "linked-list",
          },
          {
            name: "Recursion",
            id: "VG9waWNUYWdOb2RlOjMx",
            slug: "recursion",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 58.46763229975854,
        difficulty: "Hard",
        freqBar: null,
        frontendQuestionId: "25",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Reverse Nodes in k-Group",
        titleSlug: "reverse-nodes-in-k-group",
        topicTags: [
          {
            name: "Linked List",
            id: "VG9waWNUYWdOb2RlOjc=",
            slug: "linked-list",
          },
          {
            name: "Recursion",
            id: "VG9waWNUYWdOb2RlOjMx",
            slug: "recursion",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 55.408484905056724,
        difficulty: "Easy",
        freqBar: null,
        frontendQuestionId: "26",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Remove Duplicates from Sorted Array",
        titleSlug: "remove-duplicates-from-sorted-array",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Two Pointers",
            id: "VG9waWNUYWdOb2RlOjk=",
            slug: "two-pointers",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 56.57572564999482,
        difficulty: "Easy",
        freqBar: null,
        frontendQuestionId: "27",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Remove Element",
        titleSlug: "remove-element",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Two Pointers",
            id: "VG9waWNUYWdOb2RlOjk=",
            slug: "two-pointers",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 42.15070738104424,
        difficulty: "Easy",
        freqBar: null,
        frontendQuestionId: "28",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Find the Index of the First Occurrence in a String",
        titleSlug: "find-the-index-of-the-first-occurrence-in-a-string",
        topicTags: [
          {
            name: "Two Pointers",
            id: "VG9waWNUYWdOb2RlOjk=",
            slug: "two-pointers",
          },
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
          {
            name: "String Matching",
            id: "VG9waWNUYWdOb2RlOjYxMDUy",
            slug: "string-matching",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 17.426966984433097,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "29",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Divide Two Integers",
        titleSlug: "divide-two-integers",
        topicTags: [
          {
            name: "Math",
            id: "VG9waWNUYWdOb2RlOjg=",
            slug: "math",
          },
          {
            name: "Bit Manipulation",
            id: "VG9waWNUYWdOb2RlOjE5",
            slug: "bit-manipulation",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 32.50471324393701,
        difficulty: "Hard",
        freqBar: null,
        frontendQuestionId: "30",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Substring with Concatenation of All Words",
        titleSlug: "substring-with-concatenation-of-all-words",
        topicTags: [
          {
            name: "Hash Table",
            id: "VG9waWNUYWdOb2RlOjY=",
            slug: "hash-table",
          },
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
          {
            name: "Sliding Window",
            id: "VG9waWNUYWdOb2RlOjU1ODIx",
            slug: "sliding-window",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 39.76996798523506,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "31",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Next Permutation",
        titleSlug: "next-permutation",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Two Pointers",
            id: "VG9waWNUYWdOb2RlOjk=",
            slug: "two-pointers",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 34.07437130272973,
        difficulty: "Hard",
        freqBar: null,
        frontendQuestionId: "32",
        isFavor: false,
        paidOnly: false,
        status: "ac",
        title: "Longest Valid Parentheses",
        titleSlug: "longest-valid-parentheses",
        topicTags: [
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
          {
            name: "Dynamic Programming",
            id: "VG9waWNUYWdOb2RlOjEz",
            slug: "dynamic-programming",
          },
          {
            name: "Stack",
            id: "VG9waWNUYWdOb2RlOjE1",
            slug: "stack",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 40.6588473098013,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "33",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Search in Rotated Sorted Array",
        titleSlug: "search-in-rotated-sorted-array",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Binary Search",
            id: "VG9waWNUYWdOb2RlOjEx",
            slug: "binary-search",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 44.18301199040555,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "34",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Find First and Last Position of Element in Sorted Array",
        titleSlug: "find-first-and-last-position-of-element-in-sorted-array",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Binary Search",
            id: "VG9waWNUYWdOb2RlOjEx",
            slug: "binary-search",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 45.75980441450665,
        difficulty: "Easy",
        freqBar: null,
        frontendQuestionId: "35",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Search Insert Position",
        titleSlug: "search-insert-position",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Binary Search",
            id: "VG9waWNUYWdOb2RlOjEx",
            slug: "binary-search",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 59.54226636984079,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "36",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Valid Sudoku",
        titleSlug: "valid-sudoku",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Hash Table",
            id: "VG9waWNUYWdOb2RlOjY=",
            slug: "hash-table",
          },
          {
            name: "Matrix",
            id: "VG9waWNUYWdOb2RlOjYxMDUz",
            slug: "matrix",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 60.91836734693877,
        difficulty: "Hard",
        freqBar: null,
        frontendQuestionId: "37",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Sudoku Solver",
        titleSlug: "sudoku-solver",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Hash Table",
            id: "VG9waWNUYWdOb2RlOjY=",
            slug: "hash-table",
          },
          {
            name: "Backtracking",
            id: "VG9waWNUYWdOb2RlOjE0",
            slug: "backtracking",
          },
          {
            name: "Matrix",
            id: "VG9waWNUYWdOb2RlOjYxMDUz",
            slug: "matrix",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 54.8820832343711,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "38",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Count and Say",
        titleSlug: "count-and-say",
        topicTags: [
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
        ],
        hasSolutionpy: false,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 71.27735950758762,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "39",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Combination Sum",
        titleSlug: "combination-sum",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Backtracking",
            id: "VG9waWNUYWdOb2RlOjE0",
            slug: "backtracking",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 54.42531580651041,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "40",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Combination Sum II",
        titleSlug: "combination-sum-ii",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Backtracking",
            id: "VG9waWNUYWdOb2RlOjE0",
            slug: "backtracking",
          },
        ],
        hasSolutionpy: false,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 39.41492521463251,
        difficulty: "Hard",
        freqBar: null,
        frontendQuestionId: "41",
        isFavor: false,
        paidOnly: false,
        status: "ac",
        title: "First Missing Positive",
        titleSlug: "first-missing-positive",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Hash Table",
            id: "VG9waWNUYWdOb2RlOjY=",
            slug: "hash-table",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 61.0309313144754,
        difficulty: "Hard",
        freqBar: null,
        frontendQuestionId: "42",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Trapping Rain Water",
        titleSlug: "trapping-rain-water",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Two Pointers",
            id: "VG9waWNUYWdOb2RlOjk=",
            slug: "two-pointers",
          },
          {
            name: "Dynamic Programming",
            id: "VG9waWNUYWdOb2RlOjEz",
            slug: "dynamic-programming",
          },
          {
            name: "Stack",
            id: "VG9waWNUYWdOb2RlOjE1",
            slug: "stack",
          },
          {
            name: "Monotonic Stack",
            id: "VG9waWNUYWdOb2RlOjYxMDU0",
            slug: "monotonic-stack",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 40.282925927093075,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "43",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Multiply Strings",
        titleSlug: "multiply-strings",
        topicTags: [
          {
            name: "Math",
            id: "VG9waWNUYWdOb2RlOjg=",
            slug: "math",
          },
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
          {
            name: "Simulation",
            id: "VG9waWNUYWdOb2RlOjYxMDU1",
            slug: "simulation",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 27.844183979336407,
        difficulty: "Hard",
        freqBar: null,
        frontendQuestionId: "44",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Wildcard Matching",
        titleSlug: "wildcard-matching",
        topicTags: [
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
          {
            name: "Dynamic Programming",
            id: "VG9waWNUYWdOb2RlOjEz",
            slug: "dynamic-programming",
          },
          {
            name: "Greedy",
            id: "VG9waWNUYWdOb2RlOjE3",
            slug: "greedy",
          },
          {
            name: "Recursion",
            id: "VG9waWNUYWdOb2RlOjMx",
            slug: "recursion",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 40.41252674314786,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "45",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Jump Game II",
        titleSlug: "jump-game-ii",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Dynamic Programming",
            id: "VG9waWNUYWdOb2RlOjEz",
            slug: "dynamic-programming",
          },
          {
            name: "Greedy",
            id: "VG9waWNUYWdOb2RlOjE3",
            slug: "greedy",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 78.22265489133375,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "46",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Permutations",
        titleSlug: "permutations",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Backtracking",
            id: "VG9waWNUYWdOb2RlOjE0",
            slug: "backtracking",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 59.083990554945586,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "47",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Permutations II",
        titleSlug: "permutations-ii",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Backtracking",
            id: "VG9waWNUYWdOb2RlOjE0",
            slug: "backtracking",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 74.14060637398983,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "48",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Rotate Image",
        titleSlug: "rotate-image",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Math",
            id: "VG9waWNUYWdOb2RlOjg=",
            slug: "math",
          },
          {
            name: "Matrix",
            id: "VG9waWNUYWdOb2RlOjYxMDUz",
            slug: "matrix",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 68.43004565055415,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "49",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Group Anagrams",
        titleSlug: "group-anagrams",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Hash Table",
            id: "VG9waWNUYWdOb2RlOjY=",
            slug: "hash-table",
          },
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
          {
            name: "Sorting",
            id: "VG9waWNUYWdOb2RlOjYxMDQ5",
            slug: "sorting",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 34.69945461308946,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "50",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Pow(x, n)",
        titleSlug: "powx-n",
        topicTags: [
          {
            name: "Math",
            id: "VG9waWNUYWdOb2RlOjg=",
            slug: "math",
          },
          {
            name: "Recursion",
            id: "VG9waWNUYWdOb2RlOjMx",
            slug: "recursion",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 67.98377964182303,
        difficulty: "Hard",
        freqBar: null,
        frontendQuestionId: "51",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "N-Queens",
        titleSlug: "n-queens",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Backtracking",
            id: "VG9waWNUYWdOb2RlOjE0",
            slug: "backtracking",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 73.75384314109469,
        difficulty: "Hard",
        freqBar: null,
        frontendQuestionId: "52",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "N-Queens II",
        titleSlug: "n-queens-ii",
        topicTags: [
          {
            name: "Backtracking",
            id: "VG9waWNUYWdOb2RlOjE0",
            slug: "backtracking",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 50.72042951916648,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "53",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Maximum Subarray",
        titleSlug: "maximum-subarray",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Divide and Conquer",
            id: "VG9waWNUYWdOb2RlOjEy",
            slug: "divide-and-conquer",
          },
          {
            name: "Dynamic Programming",
            id: "VG9waWNUYWdOb2RlOjEz",
            slug: "dynamic-programming",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 49.27260170566789,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "54",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Spiral Matrix",
        titleSlug: "spiral-matrix",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Matrix",
            id: "VG9waWNUYWdOb2RlOjYxMDUz",
            slug: "matrix",
          },
          {
            name: "Simulation",
            id: "VG9waWNUYWdOb2RlOjYxMDU1",
            slug: "simulation",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 38.49744976257494,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "55",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Jump Game",
        titleSlug: "jump-game",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Dynamic Programming",
            id: "VG9waWNUYWdOb2RlOjEz",
            slug: "dynamic-programming",
          },
          {
            name: "Greedy",
            id: "VG9waWNUYWdOb2RlOjE3",
            slug: "greedy",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 47.23510719153749,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "56",
        isFavor: false,
        paidOnly: false,
        status: "ac",
        title: "Merge Intervals",
        titleSlug: "merge-intervals",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Sorting",
            id: "VG9waWNUYWdOb2RlOjYxMDQ5",
            slug: "sorting",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 41.417611613466356,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "57",
        isFavor: false,
        paidOnly: false,
        status: "ac",
        title: "Insert Interval",
        titleSlug: "insert-interval",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 51.24227139184872,
        difficulty: "Easy",
        freqBar: null,
        frontendQuestionId: "58",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Length of Last Word",
        titleSlug: "length-of-last-word",
        topicTags: [
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 70.9794767902757,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "59",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Spiral Matrix II",
        titleSlug: "spiral-matrix-ii",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Matrix",
            id: "VG9waWNUYWdOb2RlOjYxMDUz",
            slug: "matrix",
          },
          {
            name: "Simulation",
            id: "VG9waWNUYWdOb2RlOjYxMDU1",
            slug: "simulation",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 46.74201226946374,
        difficulty: "Hard",
        freqBar: null,
        frontendQuestionId: "60",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Permutation Sequence",
        titleSlug: "permutation-sequence",
        topicTags: [
          {
            name: "Math",
            id: "VG9waWNUYWdOb2RlOjg=",
            slug: "math",
          },
          {
            name: "Recursion",
            id: "VG9waWNUYWdOb2RlOjMx",
            slug: "recursion",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 37.63517932457414,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "61",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Rotate List",
        titleSlug: "rotate-list",
        topicTags: [
          {
            name: "Linked List",
            id: "VG9waWNUYWdOb2RlOjc=",
            slug: "linked-list",
          },
          {
            name: "Two Pointers",
            id: "VG9waWNUYWdOb2RlOjk=",
            slug: "two-pointers",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 64.2239883402539,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "62",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Unique Paths",
        titleSlug: "unique-paths",
        topicTags: [
          {
            name: "Math",
            id: "VG9waWNUYWdOb2RlOjg=",
            slug: "math",
          },
          {
            name: "Dynamic Programming",
            id: "VG9waWNUYWdOb2RlOjEz",
            slug: "dynamic-programming",
          },
          {
            name: "Combinatorics",
            id: "VG9waWNUYWdOb2RlOjYxMDU2",
            slug: "combinatorics",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 41.489419567458114,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "63",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Unique Paths II",
        titleSlug: "unique-paths-ii",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Dynamic Programming",
            id: "VG9waWNUYWdOb2RlOjEz",
            slug: "dynamic-programming",
          },
          {
            name: "Matrix",
            id: "VG9waWNUYWdOb2RlOjYxMDUz",
            slug: "matrix",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 63.759735761003945,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "64",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Minimum Path Sum",
        titleSlug: "minimum-path-sum",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Dynamic Programming",
            id: "VG9waWNUYWdOb2RlOjEz",
            slug: "dynamic-programming",
          },
          {
            name: "Matrix",
            id: "VG9waWNUYWdOb2RlOjYxMDUz",
            slug: "matrix",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 19.716879707040697,
        difficulty: "Hard",
        freqBar: null,
        frontendQuestionId: "65",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Valid Number",
        titleSlug: "valid-number",
        topicTags: [
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 45.1534110893033,
        difficulty: "Easy",
        freqBar: null,
        frontendQuestionId: "66",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Plus One",
        titleSlug: "plus-one",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Math",
            id: "VG9waWNUYWdOb2RlOjg=",
            slug: "math",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 53.44392683245823,
        difficulty: "Easy",
        freqBar: null,
        frontendQuestionId: "67",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Add Binary",
        titleSlug: "add-binary",
        topicTags: [
          {
            name: "Math",
            id: "VG9waWNUYWdOb2RlOjg=",
            slug: "math",
          },
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
          {
            name: "Bit Manipulation",
            id: "VG9waWNUYWdOb2RlOjE5",
            slug: "bit-manipulation",
          },
          {
            name: "Simulation",
            id: "VG9waWNUYWdOb2RlOjYxMDU1",
            slug: "simulation",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 43.172719016615716,
        difficulty: "Hard",
        freqBar: null,
        frontendQuestionId: "68",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Text Justification",
        titleSlug: "text-justification",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
          {
            name: "Simulation",
            id: "VG9waWNUYWdOb2RlOjYxMDU1",
            slug: "simulation",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 38.67149014934713,
        difficulty: "Easy",
        freqBar: null,
        frontendQuestionId: "69",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Sqrt(x)",
        titleSlug: "sqrtx",
        topicTags: [
          {
            name: "Math",
            id: "VG9waWNUYWdOb2RlOjg=",
            slug: "math",
          },
          {
            name: "Binary Search",
            id: "VG9waWNUYWdOb2RlOjEx",
            slug: "binary-search",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 52.85242499609431,
        difficulty: "Easy",
        freqBar: null,
        frontendQuestionId: "70",
        isFavor: false,
        paidOnly: false,
        status: "ac",
        title: "Climbing Stairs",
        titleSlug: "climbing-stairs",
        topicTags: [
          {
            name: "Math",
            id: "VG9waWNUYWdOb2RlOjg=",
            slug: "math",
          },
          {
            name: "Dynamic Programming",
            id: "VG9waWNUYWdOb2RlOjEz",
            slug: "dynamic-programming",
          },
          {
            name: "Memoization",
            id: "VG9waWNUYWdOb2RlOjMz",
            slug: "memoization",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 42.22200041310346,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "71",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Simplify Path",
        titleSlug: "simplify-path",
        topicTags: [
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
          {
            name: "Stack",
            id: "VG9waWNUYWdOb2RlOjE1",
            slug: "stack",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 56.30925509423474,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "72",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Edit Distance",
        titleSlug: "edit-distance",
        topicTags: [
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
          {
            name: "Dynamic Programming",
            id: "VG9waWNUYWdOb2RlOjEz",
            slug: "dynamic-programming",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 55.40805158284834,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "73",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Set Matrix Zeroes",
        titleSlug: "set-matrix-zeroes",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Hash Table",
            id: "VG9waWNUYWdOb2RlOjY=",
            slug: "hash-table",
          },
          {
            name: "Matrix",
            id: "VG9waWNUYWdOb2RlOjYxMDUz",
            slug: "matrix",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 49.98945536602934,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "74",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Search a 2D Matrix",
        titleSlug: "search-a-2d-matrix",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Binary Search",
            id: "VG9waWNUYWdOb2RlOjEx",
            slug: "binary-search",
          },
          {
            name: "Matrix",
            id: "VG9waWNUYWdOb2RlOjYxMDUz",
            slug: "matrix",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 62.05807114589938,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "75",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Sort Colors",
        titleSlug: "sort-colors",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Two Pointers",
            id: "VG9waWNUYWdOb2RlOjk=",
            slug: "two-pointers",
          },
          {
            name: "Sorting",
            id: "VG9waWNUYWdOb2RlOjYxMDQ5",
            slug: "sorting",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 42.89636087399251,
        difficulty: "Hard",
        freqBar: null,
        frontendQuestionId: "76",
        isFavor: false,
        paidOnly: false,
        status: "ac",
        title: "Minimum Window Substring",
        titleSlug: "minimum-window-substring",
        topicTags: [
          {
            name: "Hash Table",
            id: "VG9waWNUYWdOb2RlOjY=",
            slug: "hash-table",
          },
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
          {
            name: "Sliding Window",
            id: "VG9waWNUYWdOb2RlOjU1ODIx",
            slug: "sliding-window",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 70.27545760940895,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "77",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Combinations",
        titleSlug: "combinations",
        topicTags: [
          {
            name: "Backtracking",
            id: "VG9waWNUYWdOb2RlOjE0",
            slug: "backtracking",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 77.3425475470443,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "78",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Subsets",
        titleSlug: "subsets",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Backtracking",
            id: "VG9waWNUYWdOb2RlOjE0",
            slug: "backtracking",
          },
          {
            name: "Bit Manipulation",
            id: "VG9waWNUYWdOb2RlOjE5",
            slug: "bit-manipulation",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 42.650842643773395,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "79",
        isFavor: false,
        paidOnly: false,
        status: "ac",
        title: "Word Search",
        titleSlug: "word-search",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
          {
            name: "Backtracking",
            id: "VG9waWNUYWdOb2RlOjE0",
            slug: "backtracking",
          },
          {
            name: "Matrix",
            id: "VG9waWNUYWdOb2RlOjYxMDUz",
            slug: "matrix",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 57.94347920102667,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "80",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Remove Duplicates from Sorted Array II",
        titleSlug: "remove-duplicates-from-sorted-array-ii",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Two Pointers",
            id: "VG9waWNUYWdOb2RlOjk=",
            slug: "two-pointers",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 37.614152935574715,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "81",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Search in Rotated Sorted Array II",
        titleSlug: "search-in-rotated-sorted-array-ii",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Binary Search",
            id: "VG9waWNUYWdOb2RlOjEx",
            slug: "binary-search",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 47.3403229638385,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "82",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Remove Duplicates from Sorted List II",
        titleSlug: "remove-duplicates-from-sorted-list-ii",
        topicTags: [
          {
            name: "Linked List",
            id: "VG9waWNUYWdOb2RlOjc=",
            slug: "linked-list",
          },
          {
            name: "Two Pointers",
            id: "VG9waWNUYWdOb2RlOjk=",
            slug: "two-pointers",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 52.410648688208916,
        difficulty: "Easy",
        freqBar: null,
        frontendQuestionId: "83",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Remove Duplicates from Sorted List",
        titleSlug: "remove-duplicates-from-sorted-list",
        topicTags: [
          {
            name: "Linked List",
            id: "VG9waWNUYWdOb2RlOjc=",
            slug: "linked-list",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 44.226223540521985,
        difficulty: "Hard",
        freqBar: null,
        frontendQuestionId: "84",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Largest Rectangle in Histogram",
        titleSlug: "largest-rectangle-in-histogram",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Stack",
            id: "VG9waWNUYWdOb2RlOjE1",
            slug: "stack",
          },
          {
            name: "Monotonic Stack",
            id: "VG9waWNUYWdOb2RlOjYxMDU0",
            slug: "monotonic-stack",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 47.01919420701969,
        difficulty: "Hard",
        freqBar: null,
        frontendQuestionId: "85",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Maximal Rectangle",
        titleSlug: "maximal-rectangle",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Dynamic Programming",
            id: "VG9waWNUYWdOb2RlOjEz",
            slug: "dynamic-programming",
          },
          {
            name: "Stack",
            id: "VG9waWNUYWdOb2RlOjE1",
            slug: "stack",
          },
          {
            name: "Matrix",
            id: "VG9waWNUYWdOb2RlOjYxMDUz",
            slug: "matrix",
          },
          {
            name: "Monotonic Stack",
            id: "VG9waWNUYWdOb2RlOjYxMDU0",
            slug: "monotonic-stack",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 56.165049034987405,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "86",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Partition List",
        titleSlug: "partition-list",
        topicTags: [
          {
            name: "Linked List",
            id: "VG9waWNUYWdOb2RlOjc=",
            slug: "linked-list",
          },
          {
            name: "Two Pointers",
            id: "VG9waWNUYWdOb2RlOjk=",
            slug: "two-pointers",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 40.023039841202326,
        difficulty: "Hard",
        freqBar: null,
        frontendQuestionId: "87",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Scramble String",
        titleSlug: "scramble-string",
        topicTags: [
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
          {
            name: "Dynamic Programming",
            id: "VG9waWNUYWdOb2RlOjEz",
            slug: "dynamic-programming",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 49.47650143049599,
        difficulty: "Easy",
        freqBar: null,
        frontendQuestionId: "88",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Merge Sorted Array",
        titleSlug: "merge-sorted-array",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Two Pointers",
            id: "VG9waWNUYWdOb2RlOjk=",
            slug: "two-pointers",
          },
          {
            name: "Sorting",
            id: "VG9waWNUYWdOb2RlOjYxMDQ5",
            slug: "sorting",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 59.06123392747635,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "89",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Gray Code",
        titleSlug: "gray-code",
        topicTags: [
          {
            name: "Math",
            id: "VG9waWNUYWdOb2RlOjg=",
            slug: "math",
          },
          {
            name: "Backtracking",
            id: "VG9waWNUYWdOb2RlOjE0",
            slug: "backtracking",
          },
          {
            name: "Bit Manipulation",
            id: "VG9waWNUYWdOb2RlOjE5",
            slug: "bit-manipulation",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 57.17628525320833,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "90",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Subsets II",
        titleSlug: "subsets-ii",
        topicTags: [
          {
            name: "Array",
            id: "VG9waWNUYWdOb2RlOjU=",
            slug: "array",
          },
          {
            name: "Backtracking",
            id: "VG9waWNUYWdOb2RlOjE0",
            slug: "backtracking",
          },
          {
            name: "Bit Manipulation",
            id: "VG9waWNUYWdOb2RlOjE5",
            slug: "bit-manipulation",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 34.806417913478654,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "91",
        isFavor: false,
        paidOnly: false,
        status: "ac",
        title: "Decode Ways",
        titleSlug: "decode-ways",
        topicTags: [
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
          {
            name: "Dynamic Programming",
            id: "VG9waWNUYWdOb2RlOjEz",
            slug: "dynamic-programming",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 47.62108031377736,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "92",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Reverse Linked List II",
        titleSlug: "reverse-linked-list-ii",
        topicTags: [
          {
            name: "Linked List",
            id: "VG9waWNUYWdOb2RlOjc=",
            slug: "linked-list",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 49.72130389843615,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "93",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Restore IP Addresses",
        titleSlug: "restore-ip-addresses",
        topicTags: [
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
          {
            name: "Backtracking",
            id: "VG9waWNUYWdOb2RlOjE0",
            slug: "backtracking",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 76.00661927055884,
        difficulty: "Easy",
        freqBar: null,
        frontendQuestionId: "94",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Binary Tree Inorder Traversal",
        titleSlug: "binary-tree-inorder-traversal",
        topicTags: [
          {
            name: "Stack",
            id: "VG9waWNUYWdOb2RlOjE1",
            slug: "stack",
          },
          {
            name: "Tree",
            id: "VG9waWNUYWdOb2RlOjIw",
            slug: "tree",
          },
          {
            name: "Depth-First Search",
            id: "VG9waWNUYWdOb2RlOjIx",
            slug: "depth-first-search",
          },
          {
            name: "Binary Tree",
            id: "VG9waWNUYWdOb2RlOjYxMDU3",
            slug: "binary-tree",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 57.62015134923184,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "95",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Unique Binary Search Trees II",
        titleSlug: "unique-binary-search-trees-ii",
        topicTags: [
          {
            name: "Dynamic Programming",
            id: "VG9waWNUYWdOb2RlOjEz",
            slug: "dynamic-programming",
          },
          {
            name: "Backtracking",
            id: "VG9waWNUYWdOb2RlOjE0",
            slug: "backtracking",
          },
          {
            name: "Tree",
            id: "VG9waWNUYWdOb2RlOjIw",
            slug: "tree",
          },
          {
            name: "Binary Search Tree",
            id: "VG9waWNUYWdOb2RlOjMw",
            slug: "binary-search-tree",
          },
          {
            name: "Binary Tree",
            id: "VG9waWNUYWdOb2RlOjYxMDU3",
            slug: "binary-tree",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 60.95868031662665,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "96",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Unique Binary Search Trees",
        titleSlug: "unique-binary-search-trees",
        topicTags: [
          {
            name: "Math",
            id: "VG9waWNUYWdOb2RlOjg=",
            slug: "math",
          },
          {
            name: "Dynamic Programming",
            id: "VG9waWNUYWdOb2RlOjEz",
            slug: "dynamic-programming",
          },
          {
            name: "Tree",
            id: "VG9waWNUYWdOb2RlOjIw",
            slug: "tree",
          },
          {
            name: "Binary Search Tree",
            id: "VG9waWNUYWdOb2RlOjMw",
            slug: "binary-search-tree",
          },
          {
            name: "Binary Tree",
            id: "VG9waWNUYWdOb2RlOjYxMDU3",
            slug: "binary-tree",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 39.89247035177133,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "97",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Interleaving String",
        titleSlug: "interleaving-string",
        topicTags: [
          {
            name: "String",
            id: "VG9waWNUYWdOb2RlOjEw",
            slug: "string",
          },
          {
            name: "Dynamic Programming",
            id: "VG9waWNUYWdOb2RlOjEz",
            slug: "dynamic-programming",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 32.8643184237773,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "98",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Validate Binary Search Tree",
        titleSlug: "validate-binary-search-tree",
        topicTags: [
          {
            name: "Tree",
            id: "VG9waWNUYWdOb2RlOjIw",
            slug: "tree",
          },
          {
            name: "Depth-First Search",
            id: "VG9waWNUYWdOb2RlOjIx",
            slug: "depth-first-search",
          },
          {
            name: "Binary Search Tree",
            id: "VG9waWNUYWdOb2RlOjMw",
            slug: "binary-search-tree",
          },
          {
            name: "Binary Tree",
            id: "VG9waWNUYWdOb2RlOjYxMDU3",
            slug: "binary-tree",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
      {
        acRate: 52.994511426815464,
        difficulty: "Medium",
        freqBar: null,
        frontendQuestionId: "99",
        isFavor: false,
        paidOnly: false,
        status: null,
        title: "Recover Binary Search Tree",
        titleSlug: "recover-binary-search-tree",
        topicTags: [
          {
            name: "Tree",
            id: "VG9waWNUYWdOb2RlOjIw",
            slug: "tree",
          },
          {
            name: "Depth-First Search",
            id: "VG9waWNUYWdOb2RlOjIx",
            slug: "depth-first-search",
          },
          {
            name: "Binary Search Tree",
            id: "VG9waWNUYWdOb2RlOjMw",
            slug: "binary-search-tree",
          },
          {
            name: "Binary Tree",
            id: "VG9waWNUYWdOb2RlOjYxMDU3",
            slug: "binary-tree",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: false,
      },
      {
        acRate: 61.954417414479515,
        difficulty: "Easy",
        freqBar: null,
        frontendQuestionId: "100",
        isFavor: false,
        paidOnly: false,
        status: "ac",
        title: "Same Tree",
        titleSlug: "same-tree",
        topicTags: [
          {
            name: "Tree",
            id: "VG9waWNUYWdOb2RlOjIw",
            slug: "tree",
          },
          {
            name: "Depth-First Search",
            id: "VG9waWNUYWdOb2RlOjIx",
            slug: "depth-first-search",
          },
          {
            name: "Breadth-First Search",
            id: "VG9waWNUYWdOb2RlOjIy",
            slug: "breadth-first-search",
          },
          {
            name: "Binary Tree",
            id: "VG9waWNUYWdOb2RlOjYxMDU3",
            slug: "binary-tree",
          },
        ],
        hasSolutionpy: true,
        hasVideoSolutionpy: true,
      },
    ],
  },
};

const questions = [
  {
    title: "hello world",
    description: "print `hello world` to console",
    exampleip: [""],
    exampleop: ["Hello world"],
    difficulty: "easy",
    solutionpy: `print("Hello world")`,
    topicTags: [],
  },
  {
    title: "Palindrome",
    description: "Check if the given string `s` is palindrome or not",
    exampleip: ["ababa", "abac", "aa", ""],
    exampleop: ["true", "false", "true", "true"],
    difficulty: "easy",
    solutionpy: ``,
    topicTags: [],
  },
  {
    title: "hello world",
    description: "print `hello world` to console",
    exampleip: [""],
    exampleop: ["Hello world"],
    difficulty: "easy",
    solutionpy: `print("Hello world")`,
    topicTags: [],
  },
  {
    title: "hello world",
    description: "print `hello world` to console",
    exampleip: [""],
    exampleop: ["Hello world"],
    difficulty: "easy",
    solutionpy: `print("Hello world")`,
    topicTags: [],
  },
];


description: "https://www.hackerrank.com/rest/contests/master/challenges/print-the-elements-of-a-linked-list/"

problem: "https://www.hackerrank.com/rest/contests/master/tracks/data-structures/challenges?offset=0&limit=10&track_login=true"